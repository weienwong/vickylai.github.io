<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Time Saver on VickyLai.com</title>
    <link>https://vickylai.com/tags/time-saver/</link>
    <description>Recent content in Time Saver on VickyLai.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>hello@vickylai.com (Vicky Lai)</managingEditor>
    <webMaster>hello@vickylai.com (Vicky Lai)</webMaster>
    <lastBuildDate>Mon, 02 Jul 2018 10:08:41 -0400</lastBuildDate>
    
	<atom:link href="https://vickylai.com/tags/time-saver/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How to set up a short feedback loop as a solo coder</title>
      <link>https://vickylai.com/verbose/how-to-set-up-a-short-feedback-loop-as-a-solo-coder/</link>
      <pubDate>Mon, 02 Jul 2018 10:08:41 -0400</pubDate>
      <author>hello@vickylai.com (Vicky Lai)</author>
      <guid>https://vickylai.com/verbose/how-to-set-up-a-short-feedback-loop-as-a-solo-coder/</guid>
      <description>I&amp;rsquo;ve spent the last couple years as a solo freelance developer. Comparing this experience to previously working in companies, I&amp;rsquo;ve noticed that those of us who work alone can have fewer iterative opportunities for improvement than developers who work on teams. Integral to having opportunities to improve is the concept of a short feedback loop: a process of incorporating new learning from observation and previous experience continuously over a short period of time.</description>
    </item>
    
    <item>
      <title>A coffee-break introduction to time complexity of algorithms</title>
      <link>https://vickylai.com/verbose/a-coffee-break-introduction-to-time-complexity-of-algorithms/</link>
      <pubDate>Wed, 30 May 2018 14:08:28 -0400</pubDate>
      <author>hello@vickylai.com (Vicky Lai)</author>
      <guid>https://vickylai.com/verbose/a-coffee-break-introduction-to-time-complexity-of-algorithms/</guid>
      <description>Just like writing your very first for loop, understanding time complexity is an integral milestone to learning how to write efficient complex programs. Think of it as having a superpower that allows you to know exactly what type of program might be the most efficient in a particular situation - before even running a single line of code.
The fundamental concepts of complexity analysis are well worth studying. You&amp;rsquo;ll be able to better understand how the code you&amp;rsquo;re writing will interact with the program&amp;rsquo;s input, and as a result, you&amp;rsquo;ll spend a lot less wasted time writing slow and problematic code.</description>
    </item>
    
    <item>
      <title>About time</title>
      <link>https://vickylai.com/verbose/about-time/</link>
      <pubDate>Wed, 22 Nov 2017 14:05:14 -0500</pubDate>
      <author>hello@vickylai.com (Vicky Lai)</author>
      <guid>https://vickylai.com/verbose/about-time/</guid>
      <description>This morning I read an article that&amp;rsquo;s been making the rounds lately: Modern Media Is a DoS Attack on Your Free Will.
It&amp;rsquo;s made me think, which I must admit, I at first didn&amp;rsquo;t like. See, when I wake up in the morning (and subsequently wake up my computer) the first thing I do is go on Twitter to catch up on everything I missed while I was asleep. All this before my first coffee, mind you.</description>
    </item>
    
    <item>
      <title>Batch renaming images, including image resolution, with awk</title>
      <link>https://vickylai.com/verbose/batch-renaming-images-including-image-resolution-with-awk/</link>
      <pubDate>Mon, 20 Nov 2017 13:59:30 -0500</pubDate>
      <author>hello@vickylai.com (Vicky Lai)</author>
      <guid>https://vickylai.com/verbose/batch-renaming-images-including-image-resolution-with-awk/</guid>
      <description>The most recent item on my list of &amp;ldquo;Geeky things I did that made me feel pretty awesome&amp;rdquo; is an hour&amp;rsquo;s adventure that culminated in this code:
$ file IMG* | awk &amp;#39;BEGIN{a=0} {print substr($1, 1, length($1)-5),a++&amp;#34;_&amp;#34;substr($8,1, length($8)-1)}&amp;#39; | while read fn fr; do echo $(rename -v &amp;#34;s/$fn/img_$fr/g&amp;#34; *); done IMG_20170808_172653_425.jpg renamed as img_0_4032x3024.jpg IMG_20170808_173020_267.jpg renamed as img_1_3024x3506.jpg IMG_20170808_173130_616.jpg renamed as img_2_3024x3779.jpg IMG_20170808_173221_425.jpg renamed as img_3_3024x3780.jpg IMG_20170808_173417_059.jpg renamed as img_4_2956x2980.</description>
    </item>
    
    <item>
      <title>How to replace a string in a dozen old blog posts with one sed terminal command</title>
      <link>https://vickylai.com/verbose/how-to-replace-a-string-in-a-dozen-old-blog-posts-with-one-sed-terminal-command/</link>
      <pubDate>Sat, 06 May 2017 20:04:53 +0800</pubDate>
      <author>hello@vickylai.com (Vicky Lai)</author>
      <guid>https://vickylai.com/verbose/how-to-replace-a-string-in-a-dozen-old-blog-posts-with-one-sed-terminal-command/</guid>
      <description>June 1, 2018: This post was previously titled &amp;ldquo;That time 30 seconds, StackOverflow, and sed saved me 30 minutes&amp;rdquo; and has since been revised and updated with more examples and a couple new doodles. It&amp;rsquo;s better now.
I&amp;rsquo;ve had more than a few usernames, URLs, and Twitter handles over the years. Whether it was changing to something that better reflected my current interests or briefly getting caught up in the &amp;ldquo;.</description>
    </item>
    
  </channel>
</rss>
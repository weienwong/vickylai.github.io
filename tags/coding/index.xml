<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Coding on VickyLai.io</title>
    <link>https://vickylai.io/tags/coding/</link>
    <description>Recent content in Coding on VickyLai.io</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 18 May 2017 11:40:06 +0700</lastBuildDate>
    
	<atom:link href="https://vickylai.io/tags/coding/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Understanding Array.prototype.reduce() and Recursion with Apple Pie</title>
      <link>https://vickylai.io/verbose/reduce-recursion-with-pie/</link>
      <pubDate>Thu, 18 May 2017 11:40:06 +0700</pubDate>
      
      <guid>https://vickylai.io/verbose/reduce-recursion-with-pie/</guid>
      <description>I was having trouble understanding reduce() and recursion, so I wrote this article to explain it to myself (Hey, look! Recursion!). I hope you find it helpful too!
Given an array with nested arrays:
var arr = [1, [2], [3, [[4]]]]  We want to produce this:
var flat = [1, 2, 3, 4]  Using for loops and if statements Naively, and if we know the maximum number of nested arrays we&amp;rsquo;ll encounter (in this example, 4), we can use for loops to iterate through each array item, and if statements to check if each item is in itself an array, and so on&amp;hellip;</description>
    </item>
    
    <item>
      <title>Iterating Over Objects and Arrays: Frequent Errors</title>
      <link>https://vickylai.io/verbose/iterating-objects-arrays/</link>
      <pubDate>Tue, 16 May 2017 10:46:46 +0700</pubDate>
      
      <guid>https://vickylai.io/verbose/iterating-objects-arrays/</guid>
      <description>Here&amp;rsquo;s some complaining a quick overview of some code that has confounded me more than once. I&amp;rsquo;m told even very experienced developers encounter these situations regularly, so if you find yourself on your third cup of coffee scratching your head over why your code is doing exactly what you told it to do (and not what you want it to do), maybe this post can help you.
The example code is JavaScript, since that&amp;rsquo;s what I&amp;rsquo;ve been working in lately, but I believe the concepts to be pretty universal.</description>
    </item>
    
    <item>
      <title>When 30 Seconds, StackOverflow, and Sed Saves 30 Minutes</title>
      <link>https://vickylai.io/verbose/when-stackoverflow-sed-saves-30mins/</link>
      <pubDate>Sat, 06 May 2017 20:04:53 +0800</pubDate>
      
      <guid>https://vickylai.io/verbose/when-stackoverflow-sed-saves-30mins/</guid>
      <description>This week, I launched my new website and changed my Twitter username to match. I was about to spend time going through all my old blog posts to find and update the URLs when this very future blog post popped up on my screen like Clippy and shook its pixelated head disapprovingly.
Here&amp;rsquo;s a worthwhile new habit for you: anytime you find yourself going &amp;ldquo;Ughhh I have to do that?</description>
    </item>
    
    <item>
      <title>Top Free Resources for Developing Coding Superpowers</title>
      <link>https://vickylai.io/verbose/free-resources-for-coding-superpowers/</link>
      <pubDate>Thu, 27 Apr 2017 08:14:09 +0800</pubDate>
      
      <guid>https://vickylai.io/verbose/free-resources-for-coding-superpowers/</guid>
      <description>I&amp;rsquo;m frequently asked for my opinion on how to get started on being a freelance developer. If you&amp;rsquo;re hoping to live the life of a remote working digital nomad, whichever career you choose, having a little coding expertise in your back pocket will be a big benefit.
Here&amp;rsquo;s a quick list of resources that you should definitely look at first if you&amp;rsquo;re hoping to gain some coding superpowers for free.</description>
    </item>
    
    <item>
      <title>Python Programming Fundamentals: Iterations</title>
      <link>https://vickylai.io/verbose/python-programming-fundamentals-iterations/</link>
      <pubDate>Wed, 18 Jan 2017 21:58:28 +0700</pubDate>
      
      <guid>https://vickylai.io/verbose/python-programming-fundamentals-iterations/</guid>
      <description>I&amp;rsquo;ve been working in Python 3 for about a week, and so far greatly enjoy it. To me, learning code syntax (and programming in general) amounts to an amalgamation of lego blocks: once it&amp;rsquo;s understood what a certain color of block does, it&amp;rsquo;s straightforward to combine them to create the structure you&amp;rsquo;re looking for.
That said, some blocks can be a little confusing at first. I found documentation relating to iteration in Python to be a little hard to digest, mostly because of subtle differences in terminology: iteration, iterator, iterating, iterable&amp;hellip; it&amp;rsquo;s enough to make your eyes glaze over.</description>
    </item>
    
  </channel>
</rss>